点滴
1.pivot
select  [userid],[0],[1],[2],[3],[4],[5],[6],[7],[8]
from
(SELECT  distinct TypeId ,UserId
  FROM [ppdai].[dbo].[InpourOnline]) a
 pivot
 (sum(typeid) for typeid in ([0],[1],[2],[3],[4],[5],[6],[7],[8])) b
 order by 1
unpivot
SELECT PName,电话类型,电话号码
FROM tb_Tel
UNPIVOT(电话类型 FOR 电话号码 IN (Mobile1,Mobile2,Mobile3) ) p


2.尽量以小表的形式进行查询，而不要全表查询
3.isnull==>ISNULL ( check_expression , replacement_value )
4.字符串长度len()
5. substring字段名,起始位置,取字符长度)
6.rank() over (partition by xx order by xx)
#   rank() over(partition by deptno order by sal desc) 
7.转换成字符型
CAST ( expression AS data_type )  or  CONVERT (data_type[(length)], expression [, style])
8.聚合函数
 AVG  返回指定组中的平均值，空值被忽略。 
 例：select  prd_no,avg(qty) from sales group by prd_no 

 COUNT  返回指定组中项目的数量。 
 例：select  count(prd_no) from sales 

 MAX  返回指定数据的最大值。 
 例：select  prd_no,max(qty) from sales group by prd_no 

 MIN  返回指定数据的最小值。 
 例：select  prd_no,min(qty) from sales group by prd_no 

 SUM  返回指定数据的和，只能用于数字列，空值被忽略。 
 例：select  prd_no,sum(qty) from sales group by prd_no 

 COUNT_BIG  返回指定组中的项目数量，与COUNT函数不同的是COUN 
 例：select  count_big(prd_no) from sales 

 GROUPING  产生一个附加的列，当用CUBE或ROLLUP运算符添加行时 
 例：select  prd_no,sum(qty),grouping(prd_no) from sales 

 BINARY_CHECKSUM  返回对表中的行或表达式列表计算的二进制校验 
 例：select  prd_no,binary_checksum(qty) from sales group 

 CHECKSUM_AGG  返回指定数据的校验值，空值被忽略。 
 例：select  prd_no,checksum_agg(binary_checksum(*)) from 

 . CHECKSUM  返回在表的行上或在表达式列表上计算的校验值，用于 

 . STDEV  返回给定表达式中所有值的统计标准偏差。 
 例：select  stdev(prd_no) from sales 

 . STDEVP  返回给定表达式中的所有值的填充统计标准偏差。 
 例：select  stdevp(prd_no) from sales 

 . VAR  返回给定表达式中所有值的统计方差。 
 例：select  var(prd_no) from sales 

 . VARP  返回给定表达式中所有值的填充的统计方差。 
 例：select  varp(prd_no) from sales 
9. like '%express%'
#用charindex代替LIKE
select count(*) from Northwind.dbo.Customers where CHARINDEX('Rd',Address) > 0 or CHARINDEX('Road',Address)> 0
10. 连接两字符  "+"  
#  DATENAME(year,creationdate)+DATENAME(MONTH,creationdate)
11.CHARINDEX (代替LIKE)
#  WHERE CHARINDEX('登录',Description)>0
12.full join是把左右两表的有关联的数据行关联显示，
没有关联的行单独显示，另一个表的数据则用null填充
13.######### 
insert
###################
set identity_insert ppdai_new.DBO.NewListTypes2 ON
INSERT INTO ppdai_new.DBO.NewListTypes2(NewListTypeId2,Name,CategoryName)
VALUES('17','网络达人','网络达人')
set identity_insert ppdai_new.DBO.NewListTypes2 OFF
14.delete
#####
delete  FROM [ppdai_new].[dbo].[NewListTypes2]
where NewListTypeId2=17
15.
判断数据库对象是否存在  if object_id(N'对象名',N'对象类型') is not null  执行语句 
###
删除用户表 
if object_id(N'表名',N'U') is not null drop table 表名    
删除存储过程  
if object_id(N'存储过程名',N'P') is not null drop procedure 存储过程名
16.
IDENTITY (1, 1)
===》
自动增长的意思
比如id是这个的话
那你插入数据一般不能插id进去。
它会自动增加（从1开始）
17.
USE { database }
database
用户上下文要切换到的数据库或数据库快照的名称。 数据库和数据库快照名称必须符合标识符规则。
18.
substring(CONVERT(varchar,lt.creationdate,112),1,6)   YYYYMM
19.
create table ===>
########################################
create table [taobaodata].dbo.TBshopResult
  (
	  TotalID int not null PRIMARY KEY
      ,[淘宝URL] nvarchar(100) 
      ,[淘宝店铺编号] int not null
      ,[店铺类型]   nvarchar(30)
      ,[经营范围]   nvarchar(50)
      ,[地区]	   nvarchar(30)
      ,[淘宝旺旺]	 nvarchar(50)
      ,[好评率]		 decimal(5,2)
      ,[卖家等级]	 nvarchar(30)
      ,[商品与描述相符度]	   decimal(5,1)
      ,[商品与描述相符度同业水平]   decimal(5,2)
      ,[服务态度]	   decimal(5,1)
      ,[服务态度同业水平]	 decimal(5,2)
      ,[发货速度]			 decimal(5,1)
      ,[发货速度同业水平]	   decimal(5,2)
      ,[近一个月好评]	  int not null
      ,[近一个月中评]	  int not null
      ,[近一个月差评]	  int not null
      ,[近半年好评]		int not null
      ,[近半年中评]	   int not null
      ,[近半年差评]	   int not null
      ,[创建时间]	 datetime
      ,[修改时间]	 datetime not null
	  )
insert into [taobaodata].dbo.TBshopResult
select   *
from taobaodata..TaobaoShopResult_Init tsi
where tsi.淘宝旺旺  not in
  (select  ucd.Value
from  ppdai..UserCorrelation uc 
inner join ppdai_ThirdParty..UserCorrelationDetail ucd on uc.CorrelationId=ucd.CorrelationId
where uc.RelatedType=6   and ucd.Property='Nick')







==========》
ALTER TABLE [taobaodata].dbo.TBshopResult
ADD PRIMARY KEY (TotalID)	  
	  
	  
	  

20.
删除表=============》
#######################
if object_id('tempdb.dbo.#TaobaoWangwang_T1') is not null
	drop table #TaobaoWangwang_T1
 
 21.余数=====》
 SUM(DocumentStatusId)%2  ---整除2余
 22.
 count(1)=count(*)，其实就是计算一共有多少符合条件的行
23.
join ===>
full ,left ,right ,inner,cross & join
24.
-----
identity(1,1)
-------------
use ppdai_new
go
create table user_reg_listing
(ID int primary key identity(1,1),
 Userid int not null ,
 Regdate datetime null,
 RegName	nvarchar(50) null,
 ListingId	int null,
 Amount money  null,
 Poundage money null,
 ListCreationDate datetime null,
 ListAuditingDate datetime null,
 IsSuc bit null 
)
#################################
insert into	ppdai_new..user_reg_listing 
(Userid,Regdate ,RegName,ListingId,Amount,Poundage,ListCreationDate,ListAuditingDate,IsSuc)
select uds.UserId ,uds.CreationDate regdate ,rs.Name name,isnull(lt.ListingID,0)  listingid,ISNULL(lt.Amount,0) amount,
       isnull(lt.Poundage,0) poundage,isnull(lt.CreationDate,0)  listcreationdate,isnull(lt.AuditingDate,0) listauditingdate,
       case when lt.StatusID In(4,12) then 1 else 0 end 'issuc'
from ppd..UserDetails uds 
inner join ppdai_new..RegSources rs on uds.RegsourceId=rs.RegSourceId 
left join ppdai..Listing lt on lt.BorrowerID=uds.UserId and lt.StatusID <>11

###################################
delete from  ppdai_new..user_reg_listing 

25.
//create table in ppdai_mkt
use ppdai_mkt
go
create table sem_daily_cost
(ID int primary key identity(1,1),
regsourceid int null,
cost int null,
click int null,
cost_date datetime null)

26.
//新增一个字段
alter table ppdai_mkt..sem_daily_cost add impressions int null
 
27.
//插入多行
insert ppdai_mkt..sem_daily_cost
(regsourceid,cost,click,cost_date,impressions)
values(41,693.21,3422,'2013/6/10',1171354),
(41,676.49,2921,'2013/6/11',1166864),
(41,654.66,3404,'2013/6/12',1244492),
(41,928.23,3588,'2013/6/13',1199200),
(41,883.64,3946,'2013/6/14',1219439),
(41,911.51,4267,'2013/6/15',1357256),
(41,809.42,3903,'2013/6/16',1416670),
(41,838.23,2786,'2013/6/17',1411024),
(41,688.57,2844,'2013/6/18',1162008),
(41,821.6,3596,'2013/6/19',1064676),
(41,522.3,1717,'2013/6/20',392915),
(41,368.9,1473,'2013/6/21',197528),
(41,429.84,1652,'2013/6/22',263363),
(41,511.31,1964,'2013/6/23',328962),
(42,2334,1680,'2013/6/15',145000),
(42,2324,1605,'2013/6/16',125900),
(42,3268,2230,'2013/6/17',234100),
(42,3244,2573,'2013/6/18',276500),
(42,3223,2441,'2013/6/19',260200),
(42,3196,2443,'2013/6/20',222100),
(42,3199,2324,'2013/6/21',186200),
(42,3195,2347,'2013/6/22',181500),
(42,3186,2357,'2013/6/23',174800),
(45,574.26,924,'2013/6/15',167572),
(45,497.91,900,'2013/6/16',160667),
(45,689.58,1237,'2013/6/17',239249),
(45,647.51,1110,'2013/6/18',235538),
(45,637.78,1044,'2013/6/19',229049),
(45,669.8,1119,'2013/6/20',235916),
(45,637.51,1065,'2013/6/21',231535),
(45,558.85,851,'2013/6/22',178946),
(45,549.8,832,'2013/6/23',177161),
(46,365.36,584,'2013/6/15',1102458),
(46,357.29,549,'2013/6/16',888103),
(46,395.85,629,'2013/6/17',662472),
(46,316.12,502,'2013/6/18',1044847),
(46,349.74,583,'2013/6/19',759453),
(46,275.2,471,'2013/6/20',586711),
(46,28.71,75,'2013/6/21',568168),
(46,7.61,20,'2013/6/22',89980),
(46,0,0,'2013/6/23',0);

28.
修改字段名：
alter table tab_info rename column createname to thisname;

修改字段属性：
alter table tab_info alter column thisname varchar(200) not null;

修改默认值
alter table tabinfo add constraint df default('嘿嘿') for thisname;


29.
//unpivot example
select name ,[date],[column],num
from 
(select b.name,a.cost,a.click,a.impressions,convert(nvarchar,a.cost_date,112)	'date'
from ppdai_mkt..sem_daily_cost	a
inner join ppdai_new..regsources  b on a.regsourceid=b.regsourceid)	c
UNPIVOT
(num for [column] in (c.[cost],c.[click],c.[impressions]))	d


30.
//create function

CREATE FUNCTION shasha  (@fphm varchar(50))
RETURNS varchar(8)
AS
BEGIN
   SET @fphm = replace(@fphm,' ','');
   SET @fphm = replace(@fphm,'０','0');
   SET @fphm = replace(@fphm,'１','1');
   SET @fphm = replace(@fphm,'２','2');
   SET @fphm = replace(@fphm,'３','3');
   SET @fphm = replace(@fphm,'４','4');
   SET @fphm = replace(@fphm,'５','5');
   SET @fphm = replace(@fphm,'６','6');
   SET @fphm = replace(@fphm,'７','7');
   SET @fphm = replace(@fphm,'８','8');
   SET @fphm = replace(@fphm,'９','9');
   RETURN(@fphm)
END
CREATE TABLE #id_convert(USER_ID INT NOT null,id_number NVARCHAR(60) null)
INSERT INTO #id_convert (user_id,id_number)
SELECT userid,IdNumber FROM ppd..UserDetails
update  #id_convert set id_number = dbo.shasha(id_number) where ASCII(SUBSTRING(id_number,1,1))>57
SELECT user_id, case WHEN  LEN(id_number)=18 THEN  YEAR(GETDATE())-SUBSTRING(id_number,7,4)
          WHEN LEN(id_number)=15 THEN (YEAR(GETDATE())-SUBSTRING(id_number,6,2)-1900) ELSE 0 END  age
FROM #id_convert WHERE LEN(id_number) IN (15,18)


31.
//cross join



32.
//跨库查询

SQL Server跨服务器查询

语法格式
SELECT*

FROMOPENDATASOURCE(

'SQLOLEDB',

'Data Source=ServerName;User ID=sa;Password=sa'

).DataBaseName.dbo.Table

示例：查询Anboo_WuLiu_ErGang数据库的T_CV_Record表中1号转炉记录插入时间大于2011-08-29的信息:
SELECT*FROM

OPENDATASOURCE(

'SQLOLEDB',

'Data Source=10.8.1.210;User ID=sa;Password=100200').Anboo_WuLiu_Log_ErGang.DBO.T_CV_Record

WHEREInsertTime]] > '2011-08-29'ANDTHHeat=1

收到如下提示的解决办法：
Msg 15281, Level 16, State 1, Line 1

SQL Server 阻止了对组件'Ad Hoc Distributed Queries' 的STATEMENT 'OpenRowset/OpenDatasource' 的访问，因为此组件已作为此服务器安全配置的一部分而被关闭。系统管理员可以通过使用sp_configure 启用'Ad Hoc Distributed Queries'。有关启用'Ad Hoc Distributed Queries' 的详细信息，请参阅SQL Server 联机丛书中的"外围应用配置器"。

启用Ad Hoc Distributed Queries：

exec sp_configure 'show advanced options',1

reconfigure

exec sp_configure 'Ad Hoc Distributed Queries',1

reconfigure

使用完成后，关闭Ad Hoc Distributed Queries：

exec sp_configure 'Ad Hoc Distributed Queries',0

reconfigure

exec sp_configure 'show advanced options',0

reconfigurez


##########################################EXAMPLE#######################################################

select top 10 *
from opendatasource 
('SQLOLEDB',
'Data Source=192.168.1.105;User ID=ppdai;Password=Password').[ppdai].[dbo].[listing]




